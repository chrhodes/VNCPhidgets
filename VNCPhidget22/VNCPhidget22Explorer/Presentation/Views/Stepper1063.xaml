<vncmvvm:ViewBase
    x:Class="VNCPhidget22Explorer.Presentation.Views.Stepper1063"
    x:Name="thisControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"
    
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    
    xmlns:i1="http://schemas.microsoft.com/xaml/behaviors" 
    xmlns:i2="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"

    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"     
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"  
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"   
    xmlns:phidget="clr-namespace:Phidget22;assembly=Phidget22.NET"
       
    xmlns:controls="clr-namespace:VNCPhidget22Explorer.Presentation.Controls"
    xmlns:converters="clr-namespace:VNCPhidget22Explorer.Presentation.Converters"
    xmlns:views="clr-namespace:VNCPhidget22Explorer.Presentation.Views"
    xmlns:viewModels="clr-namespace:VNCPhidget22Explorer.Presentation.ViewModels"
    
    xmlns:vncconverters="clr-namespace:VNC.WPF.Presentation.Converters;assembly=VNC.WPF.Presentation"
    
    xmlns:vnccore="clr-namespace:VNC.Core;assembly=VNC.Core"
    xmlns:vncenum="clr-namespace:VNC.Core.Xaml.Enums;assembly=VNC.Core"
    xmlns:vncmvvm="clr-namespace:VNC.Core.Mvvm;assembly=VNC.Core"    
    
    xmlns:prism="http://prismlibrary.com/"
    
    prism:ViewModelLocator.AutoWireViewModel="False"

    Background="{StaticResource Stepper1063Background}"

    d:DesignWidth="750" 

    d:DesignStyle="{StaticResource vncDesignStyleUC}" 
    MinWidth="650"
    
    SizeChanged="thisControl_SizeChanged"
>     
    <!-- d:DesignWidth="800" d:DesignHeight="450" -->
        
    <!-- <d:DesignerProperties.DesignStyle> -->
        <!-- <Style TargetType="UserControl"> -->
            <!-- <Setter Property="Background" Value="White" /> -->
        <!-- </Style> -->
    <!-- </d:DesignerProperties.DesignStyle> -->

    <vncmvvm:ViewBase.Resources>
        <converters:ForegroundColorConverter x:Key="RedGreenConverter" />
        <XmlDataProvider x:Key="SensorList" Source="/Resources/SensorList.xml" XPath="Sensors/Sensor" />
        <XmlDataProvider x:Key="HostList" Source="/Resources/HostList.xml" XPath="Hosts/Host" />
        <XmlDataProvider x:Key="StepperList" Source="/Resources/StepperList.xml" XPath="Steppers/Stepper" />
        <!--<XmlDataProvider x:Key="SensorList" Source="SensorList.xml" XPath="Sensors/Sensor" />
        <XmlDataProvider x:Key="HostList" Source="HostList.xml" XPath="Hosts/Host" />-->
        <vncconverters:SelectedItemsToListOfStringConverter x:Key="SelectedItemsToListOfStringConverter" />
        <!-- <localc:SelectedItemsConverter x:Key="SelectedItemsConverter" /> -->
        <!-- <localc:SelectedItemsToWorkItemQueryWrapperConverter x:Key="SelectedItemsToStepper1061WrapperConverter" /> -->
        <!-- <DataTemplate x:Key="dataTemplateStepper1061"> -->
        <!-- <StackPanel> -->
        <!-- <Label Content="{Binding XPath=@Name}" /> -->
        <!-- </StackPanel> -->
        <!-- </DataTemplate> -->

        <!-- <DataTemplate x:Key="dataTemplateStepper1061X"> -->
        <!-- <StackPanel> -->
        <!-- <Label Content="{Binding Name}" /> -->
        <!-- </StackPanel> -->
        <!-- </DataTemplate> -->
        <converters:SelectedItemToEnumConverter x:Key="SelectedItemToEnumConverter" />
        <converters:SelectedItemToDoubleConverter x:Key="SelectedItemToDoubleConverter" />
    </vncmvvm:ViewBase.Resources>

    <!-- Can declare ViewModel in Xaml -->
    <!-- <UserControl.DataContext> -->
        <!-- <localvm:Stepper1063ViewModel /> -->
    <!-- </UserControl.DataContext> -->
     
    <DockPanel Margin="5">

        <controls:DeveloperUIInfo x:Name="spDeveloperInfo" DockPanel.Dock="Bottom"/>

        <controls:HostSelector DockPanel.Dock="Top" />

        <dxlc:LayoutControl Orientation="Vertical" Padding="0">
            
            <dxlc:LayoutGroup Orientation="Horizontal" VerticalAlignment="Top">

                <dxlc:LayoutGroup View="Group" Orientation="Vertical" >

                    <dxlc:LayoutItem Label="Steppers" LabelPosition="Left" HorizontalAlignment="Left">
                        <dxe:ComboBoxEdit Width="150" 
                            ItemsSource="{Binding Steppers}" DisplayMember="Name" 
                            SelectedItem="{Binding SelectedStepper}"
                            SelectedIndex="0"/>
                    </dxlc:LayoutItem>

                    <dxlc:LayoutItem Label="Serial #" HorizontalAlignment="Left" >
                        <dxe:TextEdit EditValue="{Binding SelectedStepper.SerialNumber}" IsReadOnly="True" 
                                      Background="White" 
                                      Foreground="{Binding DeviceAttached, Mode=OneWay, Converter={StaticResource RedGreenConverter}}"/>
                    </dxlc:LayoutItem>

                </dxlc:LayoutGroup>

                <dxlc:LayoutItem HorizontalAlignment="Left" VerticalAlignment="Stretch">
                    <Button 
		                        Command="{Binding OpenSteppersCommand }"
		                        Content="{Binding OpenSteppersContent, FallbackValue='Open' }"
		                        ToolTip="{Binding OpenSteppersToolTip, FallbackValue='Open ToolTip' }" />
                </dxlc:LayoutItem>

                <!--Velocity-->
                
                <dxlc:LayoutGroup Orientation="Vertical" HorizontalAlignment="Center"
                                  Visibility="{Binding DeviceAttached, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <dxlc:LayoutItem Label="Select Velocity"
             	            LabelPosition="Left">
                        <!--<dxe:ComboBoxEdit		                                 
                                EditValue="{Binding
                    	            Path=SelectedFileFormats,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged,
                                    Converter={StaticResource SelectedItemsToListOfStringConverter} }" >-->
                        <dxe:ComboBoxEdit x:Name="cbeVelocityScale" 
                                          IsEnabled="{Binding DeviceAttached, FallbackValue=false}">
                            <dxe:ComboBoxEdit.StyleSettings>
                                <dxe:ComboBoxStyleSettings />
                                <!--<dxe:CheckedTokenComboBoxStyleSettings/>-->
                                <!--<dxe:CheckedComboBoxStyleSettings/>-->
                                <!--<dxe:RadioComboBoxStyleSettings/>-->
                                <!--<dxe:RadioTokenComboBoxStyleSettings/>-->
                                <!--<dxe:TokenComboBoxStyleSettings/>-->
                            </dxe:ComboBoxEdit.StyleSettings>
                            <dxe:ComboBoxEditItem Content="Min" />
                            <dxe:ComboBoxEditItem Content="01%" />
                            <dxe:ComboBoxEditItem Content="02%" />
                            <dxe:ComboBoxEditItem Content="03%" />
                            <dxe:ComboBoxEditItem Content="04%" />
                            <dxe:ComboBoxEditItem Content="05%" />
                            <dxe:ComboBoxEditItem Content="10%" />
                            <dxe:ComboBoxEditItem Content="15%" />
                            <dxe:ComboBoxEditItem Content="20%" />
                            <dxe:ComboBoxEditItem Content="25%" />
                            <dxe:ComboBoxEditItem Content="35%" />
                            <dxe:ComboBoxEditItem Content="50%" />
                            <dxe:ComboBoxEditItem Content="75%" />
                            <dxe:ComboBoxEditItem Content="Max" />
                        </dxe:ComboBoxEdit>
                    </dxlc:LayoutItem>

                    <dxlc:LayoutItem Margin="-5" VerticalAlignment="Stretch">
                        <Button 
		                        Command="{Binding InitializeVelocityCommand }"
                                CommandParameter="{Binding ElementName=cbeVelocityScale, Path=EditValue}"
		                        Content="{Binding InitializeVelocityContent, FallbackValue='Initialize Velocity' }"
		                        ToolTip="{Binding InitializeVelocityToolTip, FallbackValue='Initialize Velocity' }" />
                    </dxlc:LayoutItem>

                </dxlc:LayoutGroup>

                <!--Acceleration-->
                
                <dxlc:LayoutGroup Orientation="Vertical" HorizontalAlignment="Center"
                                  Visibility="{Binding DeviceAttached, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <dxlc:LayoutItem Label="Select Acceleration" LabelPosition="Left">
                        <!--<dxe:ComboBoxEdit		                                 
                            EditValue="{Binding
       	                        Path=SelectedFileFormats,
                                Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged,
                                Converter={StaticResource SelectedItemsToListOfStringConverter} }" >-->
                        <dxe:ComboBoxEdit x:Name="cbeAccelerationScale">
                            <dxe:ComboBoxEdit.StyleSettings>
                                <dxe:ComboBoxStyleSettings />
                                <!--<dxe:CheckedTokenComboBoxStyleSettings/>-->
                                <!--<dxe:CheckedComboBoxStyleSettings/>-->
                                <!--<dxe:RadioComboBoxStyleSettings/>-->
                                <!--<dxe:RadioTokenComboBoxStyleSettings/>-->
                                <!--<dxe:TokenComboBoxStyleSettings/>-->
                            </dxe:ComboBoxEdit.StyleSettings>
                            <dxe:ComboBoxEditItem Content="Min" />
                            <dxe:ComboBoxEditItem Content="01%" />
                            <dxe:ComboBoxEditItem Content="02%" />
                            <dxe:ComboBoxEditItem Content="03%" />
                            <dxe:ComboBoxEditItem Content="04%" />
                            <dxe:ComboBoxEditItem Content="05%" />
                            <dxe:ComboBoxEditItem Content="10%" />
                            <dxe:ComboBoxEditItem Content="15%" />
                            <dxe:ComboBoxEditItem Content="20%" />
                            <dxe:ComboBoxEditItem Content="25%" />
                            <dxe:ComboBoxEditItem Content="35%" />
                            <dxe:ComboBoxEditItem Content="50%" />
                            <dxe:ComboBoxEditItem Content="75%" />
                            <dxe:ComboBoxEditItem Content="Max" />
                        </dxe:ComboBoxEdit>
                    </dxlc:LayoutItem>

                    <dxlc:LayoutItem Margin="-5" VerticalAlignment="Stretch">
                        <Button 
                                Command="{Binding InitializeAccelerationCommand }"
                                CommandParameter="{Binding ElementName=cbeSelectAccelerationScale, Path=EditValue}"
                                Content="{Binding InitializeAccelerationContent, FallbackValue='Initialize Acceleration' }"
                                ToolTip="{Binding InitializeAccelerationToolTip, FallbackValue='Initialize Acceleration' }" />
                    </dxlc:LayoutItem>

                </dxlc:LayoutGroup>

                <!--<dxlc:LayoutItem HorizontalAlignment="Right" VerticalAlignment="Stretch">
                    <Button 
                		    Command="{Binding RefreshStepperCommand }"
                		    Content="{Binding RefreshStepperContent, FallbackValue='Refresh' }"
                		    ToolTip="{Binding RefreshStepperToolTip, FallbackValue='Refresh ToolTip' }" />
                </dxlc:LayoutItem>-->

                <dxlc:LayoutItem HorizontalAlignment="Right" VerticalAlignment="Stretch">
                    <Button 
                		        Command="{Binding CloseSteppersCommand }"
                		        Content="{Binding CloseSteppersContent, FallbackValue='Close' }"
                		        ToolTip="{Binding CloseSteppersToolTip, FallbackValue='Close ToolTip' }" />
                </dxlc:LayoutItem>

            </dxlc:LayoutGroup>

            <dxlc:LayoutGroup Name="lgPhidget22Status" Header="PhidgetDevice Status and Event Logging" View="GroupBox" 
                              Orientation="Vertical"
                              IsCollapsible="True" IsCollapsed="False"  >

                <!--<controls:PhidgetDevice x:Name="Phidget1" Margin="-5"
                               AttachedPhidgetDevice="{Binding PhidgetDevice, Mode=TwoWay}"
                               DeviceAttached="{Binding DeviceAttached, Mode=TwoWay}"/>-->

                <dxlc:LayoutGroup View="Group" Orientation="Horizontal"
                   VerticalAlignment="Top" HorizontalAlignment="Stretch"
                   Margin="-5,0,-5,0"
                   Padding="5,0,0,0"
                   Background="{StaticResource LoggingBackground}" MouseRightButtonDown="LayoutGroup_MouseRightButtonDown"
                   ToolTip="LeftCtrl-Right Click to Check All\nLeftAlt-Right Click to UnCheck All">

                    <dxe:CheckEdit
                        Content="Log Phidget Events"
                        IsChecked="{Binding LogPhidgetEvents, Mode=TwoWay}"
                        HorizontalAlignment="Left"/>
                    <dxe:CheckEdit
                        Content="Log Error Events"
                        IsChecked="{Binding LogErrorEvents, Mode=TwoWay}"
                        HorizontalAlignment="Left"/>
                    <dxe:CheckEdit
                        Content="Log PropertyChange Events"
                        IsChecked="{Binding LogPropertyChangeEvents, Mode=TwoWay}"
                        HorizontalAlignment="Left"/>
                    <dxe:CheckEdit
                        Content="Log SequenceAction"
                        IsChecked="{Binding LogSequenceAction, Mode=TwoWay}"
                        HorizontalAlignment="Left"/>
                    <dxe:CheckEdit
                        Content="Log ActionVerification"
                        IsChecked="{Binding LogActionVerification, Mode=TwoWay}"
                        HorizontalAlignment="Left"/>

                </dxlc:LayoutGroup>

                <dxlc:LayoutGroup View="Group" Orientation="Horizontal"
                                  VerticalAlignment="Top" HorizontalAlignment="Stretch"
                                  Margin="-5,0,-5,0"
                                  Padding="5,0,0,0"
                                  Background="{StaticResource LoggingBackground}">
                    <dxe:CheckEdit
                        Content="Log PositionChange Events"
                        IsChecked="{Binding LogPositionChangeEvents, Mode=TwoWay}"
                        HorizontalAlignment="Left"/>
                    <dxe:CheckEdit
                            Content="Log VelocityChange Events"
                            IsChecked="{Binding LogVelocityChangeEvents, Mode=TwoWay}"
                        HorizontalAlignment="Left"/>
                    <dxe:CheckEdit
                            Content="Log TaqrgetPositionReached Events"
                            IsChecked="{Binding LogTargetPositionReachedEvents, Mode=TwoWay}"
                        HorizontalAlignment="Left"/>
                    <dxe:CheckEdit
                        Content="Log CurrentChange Events"
                        IsChecked="{Binding LogCurrentChangeEvents, Mode=TwoWay}"
                        HorizontalAlignment="Left"/>
                </dxlc:LayoutGroup>

            </dxlc:LayoutGroup>

            <dxlc:LayoutGroup Name="lgStepperControls" Header="Stepper Controls" View="GroupBox"  Orientation="Horizontal" 
                              IsCollapsible="True" IsCollapsed="False"
                              Visibility="{Binding SteppersVisibility}"                              
                              Padding="-10" >
                <ScrollViewer HorizontalScrollBarVisibility="Auto">
                    <StackPanel Orientation="Horizontal">
                        <controls:StepperControl ControlTitle="Stepper S0" HorizontalAlignment="Left"
                            LogPhidgetEvents="{Binding Stepper0.LogPhidgetEvents,Mode=TwoWay}"
                            LogErrorEvents="{Binding Stepper0.LogErrorEvents,Mode=TwoWay}"
                            LogPropertyChangeEvents="{Binding Stepper0.LogPropertyChangeEvents,Mode=TwoWay}"
                            LogPositionChangeEvents="{Binding Stepper0.LogPositionChangeEvents,Mode=TwoWay}"
                            LogVelocityChangeEvents="{Binding Stepper0.LogVelocityChangeEvents,Mode=TwoWay}"
                            LogStoppedEvents="{Binding Stepper0.LogStoppedEvents,Mode=TwoWay}"                                                 
                                         
                            StepperNumber="0"
                            IsAttached="{Binding Stepper0.IsAttached, Mode=TwoWay}"
                            Engaged="{Binding Stepper0.Engaged, Mode=TwoWay}"
                            StepperAttached="{Binding StepperAttached, Mode=TwoWay}"
                                                 
                            MinCurrentLimit="{Binding Stepper0.MinCurrentLimit,Mode=TwoWay}"
                            CurrentLimit="{Binding Stepper0.CurrentLimit,Mode=TwoWay}"
                            HoldingCurrentLimit="{Binding Stepper0.HoldingCurrentLimit,Mode=TwoWay}"                                             
                            MaxCurrentLimit="{Binding Stepper0.MaxCurrentLimit,Mode=TwoWay}"

                            MinDataInterval="{Binding Stepper0.MinDataInterval,Mode=TwoWay}"
                            DataInterval="{Binding Stepper0.DataInterval,Mode=TwoWay}"
                            MaxDataInterval="{Binding Stepper0.MaxDataInterval,Mode=TwoWay}"
                            
                            MinDataRate="{Binding Stepper0.MinDataRate,Mode=TwoWay}"
                            DataRate="{Binding Stepper0.DataRate,Mode=TwoWay}"
                            MaxDataRate="{Binding Stepper0.MaxDataRate,Mode=TwoWay}"
                            
                            MinAcceleration="{Binding Stepper0.MinAcceleration,Mode=TwoWay}"
                            Acceleration="{Binding Stepper0.Acceleration,Mode=TwoWay}"
                            MaxAcceleration="{Binding Stepper0.MaxAcceleration,Mode=TwoWay}"
                     
                            MinPositionStepper="{Binding Stepper0.MinPositionStepper,Mode=TwoWay}"                     
                            MinPosition="{Binding Stepper0.MinPosition,Mode=TwoWay}"
                            MinPositionStop="{Binding Stepper0.MinPositionStop,Mode=TwoWay}"                                                 
                                         
                            Position="{Binding Stepper0.Position,Mode=TwoWay}"
                            TargetPosition="{Binding Stepper0.TargetPosition,Mode=TwoWay}"
                            IsMoving="{Binding Stepper0.IsMoving, Mode=OneWay}"                                         
                                         
                            MaxPositionStop="{Binding Stepper0.MaxPositionStop,Mode=TwoWay}"
                            MaxPosition="{Binding Stepper0.MaxPosition,Mode=TwoWay}"   
                            MaxPositionStepper="{Binding Stepper0.MaxPositionStepper,Mode=TwoWay}"
                            
                            Velocity="{Binding Stepper0.Velocity,Mode=TwoWay}"
                                         
                            MinVelocityLimit="{Binding Stepper0.MinVelocityLimit,Mode=TwoWay}"
                            VelocityLimit="{Binding Stepper0.VelocityLimit,Mode=TwoWay}"
                            MaxVelocityLimit="{Binding Stepper0.MaxVelocityLimit,Mode=TwoWay}" 
                              
                            ControlMode="{Binding Stepper0.ControlMode,Mode=TwoWay}"                                                 
                            RescaleFactor="{Binding Stepper0.RescaleFactor,Mode=TwoWay}" 
                            StepAngle="{Binding Stepper0.StepAngle,Mode=TwoWay}" />

                        <!--<controls:StepperControl ControlTitle="Stepper S1" HorizontalAlignment="Left"
                            LogPhidgetEvents="{Binding Stepper1.LogPhidgetEvents,Mode=TwoWay}"
                            LogErrorEvents="{Binding Stepper1.LogErrorEvents,Mode=TwoWay}"
                            LogPropertyChangeEvents="{Binding Stepper1.LogPropertyChangeEvents,Mode=TwoWay}"
                            LogPositionChangeEvents="{Binding Stepper1.LogPositionChangeEvents,Mode=TwoWay}"
                            LogVelocityChangeEvents="{Binding Stepper1.LogVelocityChangeEvents,Mode=TwoWay}"
                            LogStoppedEvents="{Binding Stepper1.LogStoppedEvents,Mode=TwoWay}"                                                 
                                         
                            StepperNumber="1"
                            IsAttached="{Binding Stepper1.IsAttached, Mode=TwoWay}"
                            Engaged="{Binding Stepper1.Engaged, Mode=TwoWay}"
                            StepperAttached="{Binding StepperAttached, Mode=TwoWay}"
                                                 
                            MinCurrentLimit="{Binding Stepper1.MinCurrentLimit,Mode=TwoWay}"
                            CurrentLimit="{Binding Stepper1.CurrentLimit,Mode=TwoWay}"
                            HoldingCurrentLimit="{Binding Stepper1.HoldingCurrentLimit,Mode=TwoWay}"                                             
                            MaxCurrentLimit="{Binding Stepper1.MaxCurrentLimit,Mode=TwoWay}"

                            MinDataInterval="{Binding Stepper1.MinDataInterval,Mode=TwoWay}"
                            DataInterval="{Binding Stepper1.DataInterval,Mode=TwoWay}"
                            MaxDataInterval="{Binding Stepper1.MaxDataInterval,Mode=TwoWay}"
                            
                            MinDataRate="{Binding Stepper1.MinDataRate,Mode=TwoWay}"
                            DataRate="{Binding Stepper1.DataRate,Mode=TwoWay}"
                            MaxDataRate="{Binding Stepper1.MaxDataRate,Mode=TwoWay}"
                            
                            MinAcceleration="{Binding Stepper1.MinAcceleration,Mode=TwoWay}"
                            Acceleration="{Binding Stepper1.Acceleration,Mode=TwoWay}"
                            MaxAcceleration="{Binding Stepper1.MaxAcceleration,Mode=TwoWay}"
                     
                            MinPositionStepper="{Binding Stepper1.MinPositionStepper,Mode=TwoWay}"                     
                            MinPosition="{Binding Stepper1.MinPosition,Mode=TwoWay}"
                            MinPositionStop="{Binding Stepper1.MinPositionStop,Mode=TwoWay}"                                                 
                                         
                            Position="{Binding Stepper1.Position,Mode=TwoWay}"
                            TargetPosition="{Binding Stepper1.TargetPosition,Mode=TwoWay}"
                            IsMoving="{Binding Stepper1.IsMoving, Mode=OneWay}"                                         
                                         
                            MaxPositionStop="{Binding Stepper1.MaxPositionStop,Mode=TwoWay}"
                            MaxPosition="{Binding Stepper1.MaxPosition,Mode=TwoWay}"   
                            MaxPositionStepper="{Binding Stepper1.MaxPositionStepper,Mode=TwoWay}"
                            
                            Velocity="{Binding Stepper1.Velocity,Mode=TwoWay}"
                                         
                            MinVelocityLimit="{Binding Stepper1.MinVelocityLimit,Mode=TwoWay}"
                            VelocityLimit="{Binding Stepper1.VelocityLimit,Mode=TwoWay}"
                            MaxVelocityLimit="{Binding Stepper1.MaxVelocityLimit,Mode=TwoWay}" 
                              
                            RescaleFactor="{Binding Stepper1.RescaleFactor,Mode=TwoWay}" />-->

                    </StackPanel>
                    
                </ScrollViewer>
                
            </dxlc:LayoutGroup>

        </dxlc:LayoutControl>
        
    </DockPanel>     

</vncmvvm:ViewBase>
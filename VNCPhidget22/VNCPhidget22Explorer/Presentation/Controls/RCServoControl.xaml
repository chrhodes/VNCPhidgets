<vncmvvm:ViewBase
    x:Class="VNCPhidget22Explorer.Presentation.Controls.RCServoControl"
    x:Name="thisControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"    

    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"     
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"  
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxre="http://schemas.devexpress.com/winfx/2008/xaml/richedit"
    
    xmlns:phidgets="clr-namespace:Phidget22;assembly=Phidget22.NET" 
    
    xmlns:controls="clr-namespace:VNCPhidget22Explorer.Presentation.Controls"
    xmlns:converters="clr-namespace:VNCPhidget22Explorer.Presentation.Converters"      
    xmlns:views="clr-namespace:VNCPhidget22Explorer.Presentation.Views"
    xmlns:viewModels="clr-namespace:VNCPhidget22Explorer.Presentation.ViewModels"
    
    xmlns:vncconverters="clr-namespace:VNC.WPF.Presentation.Converters;assembly=VNC.WPF.Presentation"
    
    xmlns:core="clr-namespace:VNCPhidget22Explorer.Core;assembly=VNCPhidget22Explorer.Core"
    
    xmlns:vnccore="clr-namespace:VNC.Core;assembly=VNC.Core"
    xmlns:vncenum="clr-namespace:VNC.Core.Xaml.Enums;assembly=VNC.Core"    
    xmlns:vncmvvm="clr-namespace:VNC.Core.Mvvm;assembly=VNC.Core" 
    
    xmlns:prism="http://prismlibrary.com/"   
    prism:ViewModelLocator.AutoWireViewModel="False"

    Background="{StaticResource VoltageInputControlBackground}"
    
    d:DesignStyle="{StaticResource vncDesignStyleUC}" 
>    
    <!-- d:DesignWidth="800" d:DesignHeight="450" -->
        
    <!-- <d:DesignerProperties.DesignStyle> -->
        <!-- <Style TargetType="UserControl"> -->
            <!-- <Setter Property="Background" Value="White" /> -->
        <!-- </Style> -->
    <!-- </d:DesignerProperties.DesignStyle> -->

    <vncmvvm:ViewBase.Resources>
        <converters:SpinEditConverter x:Key="SpinEditConverter" />
        <converters:ForegroundColorConverter x:Key="RedGreenConverter" />
        <converters:SelectedItemToEnumConverter x:Key="SelectedItemToEnumConverter" />
        <vncconverters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />        
        <!-- <localc:SelectedItemsToListOfStringConverter x:Key="SelectedItemsToListOfStringConverter" /> -->
        <!-- <localc:SelectedItemsConverter x:Key="SelectedItemsConverter" /> -->
        <!-- <localc:SelectedItemsToWorkItemQueryWrapperConverter x:Key="SelectedItemsToPositionControlWrapperConverter" /> -->
        <!-- <DataTemplate x:Key="dataTemplatePositionControl"> -->
        <!-- <StackPanel> -->
        <!-- <Label Content="{Binding XPath=@Name}" /> -->
        <!-- </StackPanel> -->
        <!-- </DataTemplate> -->

        <!-- <DataTemplate x:Key="dataTemplatePositionControlX"> -->
        <!-- <StackPanel> -->
        <!-- <Label Content="{Binding Name}" /> -->
        <!-- </StackPanel> -->
        <!-- </DataTemplate> -->
    </vncmvvm:ViewBase.Resources>

    <!-- Can declare ViewModel in Xaml -->
    <!-- <UserControl.DataContext> -->
        <!-- <localvm:PositionControlViewModel /> -->
    <!-- </UserControl.DataContext> -->

    <dxlc:LayoutGroup x:Name="lgMain"  Header="{Binding ControlTitle}" View="GroupBox" Orientation="Vertical" Padding="-10" >

        <dxlc:LayoutGroup 
                        View="GroupBox" Header="Event Logging" Orientation="Vertical" 
                        VerticalAlignment="Top" HorizontalAlignment="Stretch"
                        IsCollapsible="True" IsCollapsed="False"                                     
                        Padding="-10"
                        Background="{StaticResource LoggingBackground}">
            <dxe:CheckEdit
                                        Content="Log Phidget Events"
                                        IsChecked="{Binding LogPhidgetEvents, Mode=TwoWay}"
                                        HorizontalAlignment="Left"/>
            <dxe:CheckEdit
                                        Content="Log Error Events"
                                        IsChecked="{Binding LogErrorEvents, Mode=TwoWay}"
                                        HorizontalAlignment="Left"/>
            <dxe:CheckEdit
                                        Content="Log PropertyChange Events"
                                        IsChecked="{Binding LogPropertyChangeEvents, Mode=TwoWay}"
                                        HorizontalAlignment="Left"/>
            <dxe:CheckEdit
                                        Content="Log PositionChange Events"
                                        IsChecked="{Binding LogPositionChangeEvents, Mode=TwoWay}" 
                                        HorizontalAlignment="Left"/>
            <dxe:CheckEdit
                                        Content="Log VelocityChange Events"
                                        IsChecked="{Binding LogVelocityChangeEvents, Mode=TwoWay}"
                                        HorizontalAlignment="Left"/>
            <dxe:CheckEdit
                                        Content="Log TargetPositionReached Events"
                                        IsChecked="{Binding LogTargetPositionReached, Mode=TwoWay}"
                                        HorizontalAlignment="Left"/>

        </dxlc:LayoutGroup>

        <dxlc:LayoutItem Label="Type" LabelPosition="Top">
            <dxe:ComboBoxEdit ItemsSource="{Binding Source={vncenum:EnumBindingSource {x:Type viewModels:ServoType}}}"
                                          SelectedIndex="0"
                                          EditValue="{ Binding Path=AdvancedServoProperties[0].ServoType,
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=PropertyChanged,
                                            Converter={StaticResource SelectedItemToEnumConverter} }" />
        </dxlc:LayoutItem>

        <!-- TODO(crhodes)
                 Need to expose HeaderTitle so can set to StepperState or ServoState
                -->

        <controls:ServoStateControl
                        Engaged="{Binding AdvancedServoProperties[0].Engaged, Mode=TwoWay}"
                        SpeedRamping="{Binding AdvancedServoProperties[0].SpeedRamping, Mode=TwoWay}"
                        Stopped="{Binding AdvancedServoProperties[0].Stopped, Mode=OneWay}"
                        Current="{Binding AdvancedServoProperties[0].Current, Mode=OneWay}"/>

        <controls:ServoPositionControl
                        DeviceMin="{Binding AdvancedServoProperties[0].DevicePositionMin, Mode=OneWay}"
                        Min="{Binding AdvancedServoProperties[0].PositionMin, Mode=TwoWay}"
                        Current="{Binding AdvancedServoProperties[0].Position, Mode=TwoWay}"
                        Max="{Binding AdvancedServoProperties[0].PositionMax, Mode=TwoWay}"
                        DeviceMax="{Binding AdvancedServoProperties[0].DevicePositionMax, Mode=OneWay}"
                        ServoIndex="{Binding AdvancedServoProperties[0].ServoIndex}"
                        PositionRange="{Binding AdvancedServoProperties[0].PositionRange}"/>

        <dxlc:LayoutGroup Header="Movement Characteristics" View="GroupBox" Orientation="Vertical"
                                      VerticalAlignment="Top"
                                      IsCollapsible="True" IsCollapsed="False" Padding="-5" Background="AliceBlue">

            <!--<dxlc:LayoutItem Label="Speed Ramping" LabelPosition="Left">-->
            <dxe:CheckEdit IsChecked="{Binding AdvancedServoProperties[0].SpeedRamping}" Content="Speed Ramping"
                            Background="{Binding AdvancedServoProperties[0].SpeedRamping, Mode=OneWay,
                                Converter={StaticResource RedGreenConverter}}"/>
            <!--</dxlc:LayoutItem>-->

            <controls:VelocityControl
                            Min="{Binding AdvancedServoProperties[0].VelocityMin, Mode=OneWay}"
                            Current="{Binding AdvancedServoProperties[0].Velocity, Mode=TwoWay}"
                            Limit="{Binding AdvancedServoProperties[0].VelocityLimit, Mode=TwoWay}"
                            Max="{Binding AdvancedServoProperties[0].VelocityMax, Mode=OneWay}"/>

            <controls:AccelerationControl
                            Min="{Binding AdvancedServoProperties[0].AccelerationMin, Mode=OneWay}"
                            Current="{Binding AdvancedServoProperties[0].Acceleration, Mode=TwoWay}"
                            Max="{Binding AdvancedServoProperties[0].AccelerationMax, Mode=OneWay}"/>

        </dxlc:LayoutGroup>

        <dxlc:LayoutGroup Header="ConfigureServo" View="GroupBox" Orientation="Vertical"
                                      IsCollapsible="True" IsCollapsed="True" >

            <dxlc:LayoutItem Label="MinimumPulseWidth" LabelPosition="Top">
                <dxe:TextEdit Text="{Binding AdvancedServoProperties[0].MinimumPulseWidth, Mode=TwoWay}" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem Label="MaximumPulseWidth" LabelPosition="Top">
                <dxe:TextEdit Text="{Binding AdvancedServoProperties[0].MaximumPulseWidth, Mode=TwoWay}" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem Label="Degress" LabelPosition="Top">
                <dxe:TextEdit Text="{Binding AdvancedServoProperties[0].Degrees, Mode=TwoWay}" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem Label="VelocityMax" LabelPosition="Top">
                <dxe:TextEdit Text="{Binding AdvancedServoProperties[0].VelocityMax, Mode=TwoWay}" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem>
                <Button
                                Command="{Binding ConfigureServo2Command }"
                                CommandParameter="0"
                                Content="{Binding ConfigureServo2Content, FallbackValue='ConfigureServo2' }"
                                ToolTip="{Binding ConfigureServo2ToolTip, FallbackValue='ConfigureServo2 ToolTip' }" />
            </dxlc:LayoutItem>

        </dxlc:LayoutGroup>

    </dxlc:LayoutGroup>

</vncmvvm:ViewBase>
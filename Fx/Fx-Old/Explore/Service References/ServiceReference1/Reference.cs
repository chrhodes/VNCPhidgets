//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Explore.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://crhodes.com", ConfigurationName="ServiceReference1.IDisplayLight")]
    public interface IDisplayLight {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://crhodes.com/IDisplayLight/On", ReplyAction="http://crhodes.com/IDisplayLight/OnResponse")]
        void On(int displayLightId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://crhodes.com/IDisplayLight/Off", ReplyAction="http://crhodes.com/IDisplayLight/OffResponse")]
        void Off(int displayLightId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDisplayLightChannel : Explore.ServiceReference1.IDisplayLight, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplayLightClient : System.ServiceModel.ClientBase<Explore.ServiceReference1.IDisplayLight>, Explore.ServiceReference1.IDisplayLight {
        
        public DisplayLightClient() {
        }
        
        public DisplayLightClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DisplayLightClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DisplayLightClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DisplayLightClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void On(int displayLightId) {
            base.Channel.On(displayLightId);
        }
        
        public void Off(int displayLightId) {
            base.Channel.Off(displayLightId);
        }
    }
}
